
REM ******************************************************************
REM  
REM  Description: used for droping student schema objects. Note that
REM   
REM   
REM  
REM  
REM  
REM ******************************************************************

Changes/improvements to the Assignment ERD/Schema design

Replace "Int" type with the oracle "Number" type.      
Place constraints on number of characters constrainst added to tables. 

Show use of the Oracle sequencing. e.g. Employee_ID

Show use of Oracle indexing.

Changes based on feedback from Assigments 1+2 

a) HD_Operator table moved into Employee table.
b) The Computer_SN Caller_ID, and Call_ID attributes do not need to be included the Equipment_Reg table.
    This is repeated data already present in the Call_details table and means only one call could be 
    recorded against a piece of equipment. This was a mistake.
c) The cardinality of 
d) Change type VARCHAR to CHAR on primary ID's and VARCHAR2 ,instead of VARCHAR on other objects.
e) Call active type changed from BOOL to NUMBER and 1 or 0 constraint check added. 

Changes to ERD:
a) The bridging table SN_LookUp and the Equipment_Reg tables refered to themselves and are deadlocked. 
    This resolved in the updated ERD. 
b) There was a mistake in the Resolution_Codes table the attribute 'Resolution_Codes' is not a foreign key anywhere.
    This has been updated.
c) 
d) The original idea was to log call detail/history by appending to the comments column of the Call_Details table.
e) Type changes from char to number --list which ones


 

Deployment steps as below

1) Set-up and Debug tables.
    Use the ERD SQL export as a skeleton.
        Create tables in order 
        Job_codes
        Employee_Reg
        Equipment_Owners
        Callers
        Resolution_codes
        Problem_Category_Codes
        Specialist_Category_Codes
        HD_Specialists
        HD_Operators

        SN_Lookup               with FK Equip_ID not defined
        Create Equipment_Reg    with FK Call_ID  not defined
        Alter SN/Lookup table   define Equip_ID as FK
        
        Create Call_Details
        Alter Equipment_Reg     add Call_ID (Call_Details) as FK                 



2) Insert data for the database;
    Test data entry constrainst.
       Insert data in the order;
    
        





3) Test using







Notes:
 For ID's use the format;   [Id] INT IDENTITY(1,1) PRIMARY KEY

                GENERATED [ ALWAYS | BY DEFAULT [ ON NULL ] ]
                AS IDENTITY [ ( identity_options ) ] 

                CREATE TABLE identity_demo (
                id NUMBER GENERATED ALWAYS AS IDENTITY,
                description VARCHAR2(100) NOT NULL
                );


alter table EQUIPMENT_OWNERS MODIFY EMPLOYEE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1000;
alter table EQUIPMENT_OWNERS MODIFY EMPLOYEE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1000 INCREMENT BY 1;

INSERT INTO Call_Details VALUES (
        'Declan', 1000, 'Mac999', null, systimestamp(2), null, 'User reporting PC will not boot', null, 1, null, null
    );

    select * from Call_Details


NOT NULL UNIQUE

Use CHECK to make sure data entry on if call is active. i.e. YES/NO  or ACTIVE/RESOLVED Done


    These are   Call_ID, 
                Caller_ID,  
                Equip_ID, 
                Reg_Owner_ID, 
                Employee_ID, 
                Operator_ID, 
                HD_Specialist_ID

FOREIGN KEY REFERENCES TABLE(COLUMN). 



Add comment with the update statement and concat?? I think!!
Alter table tablename
set 

Format
FOREIGN KEY REFRENCES TABLE(COLUMN)






